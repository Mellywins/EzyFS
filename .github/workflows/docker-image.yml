name: Docker Image CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
env:
  APP_NAME: ${{secrets.APP_NAME}}
  PORT: ${{secrets.PORT}}
  HOST: ${{secrets.HOST}}
  DB_PORT: ${{secrets.DB_PORT}}
  POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
  POSTGRES_DB: ${{secrets.POSTGRES_DB}}
  POSTGRES_USER: ${{secrets.POSTGRES_USER}}
  JWT_ACCESS_TOKEN_SECRET: ${{secrets.JWT_ACCESS_TOKEN_SECRET}}
  JWT_REFRESH_TOKEN_SECRET: ${{secrets.JWT_REFRESH_TOKEN_SECRET}}
  REDIS_HOST: ${{secrets.REDIS_HOST}}
  REDIS_PORT: ${{secrets.REDIS_PORT}}
  PROJECT_EMAIL_LOGIN: ${{secrets.PROJECT_EMAIL_LOGIN}}
  PROJECT_EMAIL_PASSWORD: ${{secrets.PROJECT_EMAIL_PASSWORD}}
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Build the Docker image
        run:
          docker-compose --project-directory=. -f docker-compose.staging.yml
          build api-gateway registration_authority notifications

      - name: Docker push
        run:
          docker-compose -f docker-compose.staging.yml push api-gateway
          registration_authority notifications
